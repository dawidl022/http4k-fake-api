"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface Idable {
  id: Int
}

type Album implements Idable {
  id: Int
  title: String!
  userId: Int!
}

type Mutation {
  createAlbum(album: AlbumInput!): Album!
  createPhoto(photo: PhotoInput!): Photo!
  createTodo(todo: TodoInput!): Todo!
  deleteAlbum(id: Int!): Album!
  deletePhoto(id: Int!): Photo!
  deleteTodo(id: Int!): Todo!
  updateAlbum(album: AlbumInput!, id: Int!): Album!
  updatePhoto(id: Int!, photo: PhotoInput!): Photo!
  updateTodo(id: Int!, todo: TodoInput!): Todo!
}

type Photo implements Idable {
  albumId: Int!
  id: Int
  thumbnailUrl: String!
  title: String!
  url: String!
}

type Query {
  album(id: Int!): Album!
  albums: [Album!]!
  albumsByUser(userId: Int!): [Album!]!
  photo(id: Int!): Photo!
  photos: [Photo!]!
  photosByAlbum(albumId: Int!): [Photo!]!
  photosByUser(userId: Int!): [Photo!]!
  todo(id: Int!): Todo!
  todos: [Todo!]!
  todosByCompleteness(completed: Boolean!): [Todo!]!
  todosByUser(userId: Int!): [Todo!]!
}

type Todo implements Idable {
  completed: Boolean!
  id: Int
  title: String!
  userId: Int!
}

input AlbumInput {
  id: Int
  title: String!
  userId: Int!
}

input PhotoInput {
  albumId: Int!
  id: Int
  thumbnailUrl: String!
  title: String!
  url: String!
}

input TodoInput {
  completed: Boolean!
  id: Int
  title: String!
  userId: Int!
}
